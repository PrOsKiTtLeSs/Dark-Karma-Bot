import TCPSocket from './TCPSocket';
declare class Packet {
    data: number[];
    static from(socket: TCPSocket): Promise<Packet>;
    readByte(): number;
    readBytes(length: number): number[];
    writeByte(...values: number[]): void;
    readShortBE(): number;
    writeShortBE(value: number): void;
    readShortLE(): number;
    writeShortLE(value: number): void;
    readUShortBE(): number;
    writeUShortBE(value: number): void;
    readUShortLE(): number;
    writeUShortLE(value: number): void;
    readIntBE(): number;
    writeIntBE(value: number): void;
    readIntLE(): number;
    writeIntLE(value: number): void;
    readUIntBE(): number;
    writeUIntBE(value: number): void;
    readUIntLE(): number;
    writeUIntLE(value: number): void;
    readLongBE(): bigint;
    writeLongBE(value: bigint): void;
    readLongLE(): bigint;
    writeLongLE(value: bigint): void;
    readULongBE(): bigint;
    writeULongBE(value: bigint): void;
    readULongLE(): bigint;
    writeULongLE(value: bigint): void;
    readVarInt(): number;
    writeVarInt(value: number): void;
    readString(): string;
    writeString(value: string, writeLength: boolean): void;
    readStringNT(): string;
    writeStringNT(value: string): void;
}
export default Packet;
