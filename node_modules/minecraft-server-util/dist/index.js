"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const status_1 = require("./status");
const statusFE01FA_1 = require("./statusFE01FA");
const statusFE01_1 = require("./statusFE01");
const statusFE_1 = require("./statusFE");
const query_1 = require("./query");
const queryFull_1 = require("./queryFull");
const Description_1 = __importDefault(require("./structure/Description"));
const Packet_1 = __importDefault(require("./structure/Packet"));
const RCON_1 = require("./structure/RCON");
const TCPSocket_1 = __importDefault(require("./structure/TCPSocket"));
const UDPSocket_1 = __importDefault(require("./structure/UDPSocket"));
function ping(host, options) {
    process.emitWarning('The `ping()` method has been deprecated in favor of a more appropriate name `status()`. `ping()` will be removed in the next major release.', 'DeprecationWarning');
    return status_1.status(host, options);
}
function pingFE01FA(host, options) {
    process.emitWarning('The `pingFE01FA()` method has been deprecated in favor of a more appropriate name `statusFE01FA()`. `pingFE01FA()` will be removed in the next major release.', 'DeprecationWarning');
    return statusFE01FA_1.statusFE01FA(host, options);
}
function pingFE01(host, options) {
    process.emitWarning('The `pingFE01()` method has been deprecated in favor of a more appropriate name `statusFE01()`. `pingFE01()` will be removed in the next major release.', 'DeprecationWarning');
    return statusFE01_1.statusFE01(host, options);
}
function pingFE(host, options) {
    process.emitWarning('The `pingFE()` method has been deprecated in favor of a more appropriate name `statusFE()`. `pingFE()` will be removed in the next major release.', 'DeprecationWarning');
    return statusFE_1.statusFE(host, options);
}
module.exports = { ping, pingFE01FA, pingFE01, pingFE, status: status_1.status, statusFE01FA: statusFE01FA_1.statusFE01FA, statusFE01: statusFE01_1.statusFE01, statusFE: statusFE_1.statusFE, query: query_1.query, queryFull: queryFull_1.queryFull, Description: Description_1.default, Packet: Packet_1.default, RCON: RCON_1.RCON, TCPSocket: TCPSocket_1.default, UDPSocket: UDPSocket_1.default };
